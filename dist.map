{
  "version": 3,
  "sources": ["src/x-shell.js"],
  "sourcesContent": ["import i18n         from \"./i18n.js\";\r\nimport loader       from \"./loader.js\";\r\nimport logger       from \"./logger.js\";\r\nimport ui           from \"./ui.js\";\r\nimport utils        from \"./utils.js\";\r\n\r\nimport XPage        from \"./x-page.js\";\r\nimport XNavigator   from \"./x-navigator.js\";\r\n\r\n// class\r\nclass XShell extends HTMLElement {\r\n    \r\n    //fields\r\n    _config = {\r\n        app: {\r\n            name:       \"\",\r\n            title:      \"\",\r\n            version:    \"\",\r\n            copyright:  \"\",\r\n            logo:       \"\"\r\n        },\r\n        i18n: i18n.config,\r\n        loader: loader.config,\r\n        logger: logger.config,\r\n        menus: {},\r\n        modules: [],\r\n        navigator: {\r\n            base:  document.location.pathname.substring(0, document.location.pathname.lastIndexOf(\"/\")),\r\n            start: \"\",\r\n        },\r\n        ui: ui.config,\r\n        user: {\r\n            id: \"\",\r\n            username: \"anonymous\",\r\n            authenticated: false,\r\n            claims: {}\r\n        }\r\n    };\r\n\r\n    //ctor\r\n    constructor() {\r\n        super();\r\n        logger.log(`x-shell.constructor()`);\r\n    }\r\n\r\n    //props\r\n    get config() { return this._config; }\r\n    get navigator() { return this.firstChild; }\r\n\r\n\r\n    //events\r\n    async connectedCallback() {\r\n        let src = this.getAttribute(\"src\");\r\n        await this.addConfig(src);\r\n        await this.start();\r\n    }\r\n\r\n    //methods    \r\n    async addConfig(config, src = null) {\r\n        if (typeof(config) == \"string\") {\r\n            //add config from remote json file\r\n            let url = utils.combineUrls(this.config.navigator.base, config); \r\n            logger.log(`x-shell.addConfig('${url}')`);\r\n            let base = url.substring(0, url.lastIndexOf(\"/\"));\r\n            let response = await fetch(url);\r\n            if (response.ok) {\r\n                config = await response.json();\r\n                utils.traverse(config, (obj, key) => {\r\n                    let value = obj[key];\r\n                    if (typeof value === \"string\") {\r\n                        if (value.startsWith(\"./\") || value.startsWith(\"../\")){\r\n                            obj[key] = utils.combineUrls(base, value);\r\n                        } else if (value == \".\") {\r\n                            obj[key] = base;\r\n                        }\r\n                    }\r\n                });\r\n                this._config = utils.deepAssign(this._config, config);\r\n            } else {\r\n                console.error(`x-shell.addConfig(): ${response.status} ${response.statusText}`);\r\n            }\r\n        } else if (typeof(config) == \"object\") {\r\n            //add config from object\r\n            logger.log(`x-shell.addConfig('${src || config}')`);\r\n            this._config = utils.deepAssign(this._config, config);\r\n        } else {\r\n            //error\r\n            console.error(`x-shell.addConfig(): unable to add config, invalid type: ${typeof(config)}`);\r\n        }\r\n    }\r\n    async start() {\r\n        //start\r\n        logger.log(`x-shell.start()`);\r\n        //load modules that has remote urls\r\n        let tasks = [];\r\n        for(let i = 0; i < this.config.modules.length; i++) {\r\n            let module = this.config.modules[i];\r\n            if (module.url) {\r\n                logger.log(`  fetching module '${module.url}' ...`);\r\n                tasks.push((async() => {\r\n                    let response = await fetch(module.url);\r\n                    if (!response.ok) {\r\n                        module.error = `HTTP error! status: ${response.status}`;\r\n                    }  else {\r\n                        module = Object.assign(module, await response.json());\r\n                        this.config.modules[i] = module;\r\n                    }\r\n                })());\r\n            }\r\n        }\r\n        await Promise.all(tasks);\r\n        //merge modules configs into main config\r\n        for(let module of this.config.modules) {\r\n            if (module.config) {\r\n                let base = module.url.substring(0, module.url.lastIndexOf(\"/\"));\r\n                utils.traverse(module.config, (obj, key) => {\r\n                    let value = obj[key];\r\n                    if (typeof value === \"string\" && value.startsWith(\"./\")) {\r\n                        obj[key] = base + value.substring(1);\r\n                    }\r\n                });\r\n                this.addConfig(module.config, module.url);\r\n                delete module.config;\r\n            }\r\n        }\r\n        //init i18n\r\n        await i18n.init(this._config.i18n);\r\n        //init loader\r\n        await loader.init(this._config.loader);\r\n        //init logger\r\n        await logger.init(this._config.logger);\r\n        //init uri\r\n        await ui.init(this._config.ui);\r\n        //init navigator\r\n        this.appendChild(new XNavigator());\r\n        await this.navigator.init(this._config.navigator);\r\n        //start ui\r\n        await ui.start();\r\n        //start navigator\r\n        await this.navigator.start();\r\n        //ready\r\n        await this.ready();\r\n    }\r\n    async ready() {\r\n        //ready\r\n        logger.log(`x-shell.ready(): `, this._config);\r\n    }\r\n    \r\n\r\n    //public\r\n    async showPage({url, type, sender}) {\r\n        await this.navigator.showPage({url, type, sender});\r\n    }\r\n    async showPageStack({url, sender}) {\r\n        await this.navigator.showPage({url, type: \"stack\", sender});\r\n    }\r\n    async showPageDialog({url, sender}) {\r\n        return await this.navigator.showPage({url, type: \"dialog\", sender});\r\n    }\r\n    getRealUrl(url, page = null, includeCurrentPage = false){\r\n        return this.navigator.getRealUrl(url, page, includeCurrentPage);\r\n    }\r\n    getPage(target) {\r\n        while (target) {\r\n            if (!target.parentNode) {\r\n                target = target.host;\r\n            }\r\n            if (!target) {\r\n                debugger;\r\n                return null;\r\n            }\r\n            if (target.localName == \"x-page\") return target;\r\n            target = target.parentNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\n//define web component\r\ncustomElements.define('x-shell', XShell);\r\n\r\n\r\n//get or create instance\r\nlet xshell = document.querySelector(\"x-shell\");\r\nif (!xshell) {\r\n    xshell = document.createElement(\"x-shell\");\r\n    document.body.appendChild(xshell);\r\n}\r\n\r\n\r\n//export default instance\r\nexport default xshell;\r\n\r\n"],
  "mappings": "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",
  "names": ["i18n", "loader", "logger", "ui", "utils", "XNavigator", "XShell", "__publicField", "__async", "src", "config", "url", "base", "response", "obj", "key", "value", "tasks", "i", "module", "_0", "type", "sender", "page", "includeCurrentPage", "target", "xshell"]
}
